// source: proto/services/report/report_service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require("google-protobuf");
var goog = jspb;
var global = function () {
  if (this) {
    return this;
  }
  if (typeof window !== "undefined") {
    return window;
  }
  if (typeof global !== "undefined") {
    return global;
  }
  if (typeof self !== "undefined") {
    return self;
  }
  return Function("return this")();
}.call(null);

goog.exportSymbol("proto.services.report.CreateReportRequest", null, global);
goog.exportSymbol("proto.services.report.CreateReportResponse", null, global);
goog.exportSymbol("proto.services.report.ListAllReportsRequest", null, global);
goog.exportSymbol("proto.services.report.ListAllReportsResponse", null, global);
goog.exportSymbol("proto.services.report.Report", null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.report.Report = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.report.Report, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.report.Report.displayName = "proto.services.report.Report";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.report.CreateReportRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.report.CreateReportRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.report.CreateReportRequest.displayName =
    "proto.services.report.CreateReportRequest";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.report.CreateReportResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.report.CreateReportResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.report.CreateReportResponse.displayName =
    "proto.services.report.CreateReportResponse";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.report.ListAllReportsRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.report.ListAllReportsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.report.ListAllReportsRequest.displayName =
    "proto.services.report.ListAllReportsRequest";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.report.ListAllReportsResponse = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.services.report.ListAllReportsResponse.repeatedFields_,
    null
  );
};
goog.inherits(proto.services.report.ListAllReportsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.report.ListAllReportsResponse.displayName =
    "proto.services.report.ListAllReportsResponse";
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.services.report.Report.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.services.report.Report.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.services.report.Report} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.services.report.Report.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        reportDate: jspb.Message.getFieldWithDefault(msg, 1, ""),
        type: jspb.Message.getFieldWithDefault(msg, 2, ""),
        description: jspb.Message.getFieldWithDefault(msg, 3, ""),
        anonymous: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
        latitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
        longitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.report.Report}
 */
proto.services.report.Report.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.report.Report();
  return proto.services.report.Report.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.report.Report} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.report.Report}
 */
proto.services.report.Report.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setReportDate(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setType(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setDescription(value);
        break;
      case 4:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setAnonymous(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readFloat());
        msg.setLatitude(value);
        break;
      case 6:
        var value = /** @type {number} */ (reader.readFloat());
        msg.setLongitude(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.report.Report.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.services.report.Report.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.report.Report} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.report.Report.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getReportDate();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getAnonymous();
  if (f) {
    writer.writeBool(4, f);
  }
  f = message.getLatitude();
  if (f !== 0.0) {
    writer.writeFloat(5, f);
  }
  f = message.getLongitude();
  if (f !== 0.0) {
    writer.writeFloat(6, f);
  }
};

/**
 * optional string report_date = 1;
 * @return {string}
 */
proto.services.report.Report.prototype.getReportDate = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.services.report.Report} returns this
 */
proto.services.report.Report.prototype.setReportDate = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string type = 2;
 * @return {string}
 */
proto.services.report.Report.prototype.getType = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};

/**
 * @param {string} value
 * @return {!proto.services.report.Report} returns this
 */
proto.services.report.Report.prototype.setType = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string description = 3;
 * @return {string}
 */
proto.services.report.Report.prototype.getDescription = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};

/**
 * @param {string} value
 * @return {!proto.services.report.Report} returns this
 */
proto.services.report.Report.prototype.setDescription = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional bool anonymous = 4;
 * @return {boolean}
 */
proto.services.report.Report.prototype.getAnonymous = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 4, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.services.report.Report} returns this
 */
proto.services.report.Report.prototype.setAnonymous = function (value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};

/**
 * optional float latitude = 5;
 * @return {number}
 */
proto.services.report.Report.prototype.getLatitude = function () {
  return /** @type {number} */ (
    jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0)
  );
};

/**
 * @param {number} value
 * @return {!proto.services.report.Report} returns this
 */
proto.services.report.Report.prototype.setLatitude = function (value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};

/**
 * optional float longitude = 6;
 * @return {number}
 */
proto.services.report.Report.prototype.getLongitude = function () {
  return /** @type {number} */ (
    jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0)
  );
};

/**
 * @param {number} value
 * @return {!proto.services.report.Report} returns this
 */
proto.services.report.Report.prototype.setLongitude = function (value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.services.report.CreateReportRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.services.report.CreateReportRequest.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.services.report.CreateReportRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.services.report.CreateReportRequest.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
        report:
          (f = msg.getReport()) &&
          proto.services.report.Report.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.report.CreateReportRequest}
 */
proto.services.report.CreateReportRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.report.CreateReportRequest();
  return proto.services.report.CreateReportRequest.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.report.CreateReportRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.report.CreateReportRequest}
 */
proto.services.report.CreateReportRequest.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = /** @type {string} */ (reader.readString());
          msg.setUserId(value);
          break;
        case 2:
          var value = new proto.services.report.Report();
          reader.readMessage(
            value,
            proto.services.report.Report.deserializeBinaryFromReader
          );
          msg.setReport(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.report.CreateReportRequest.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.services.report.CreateReportRequest.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.report.CreateReportRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.report.CreateReportRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getReport();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.services.report.Report.serializeBinaryToWriter
    );
  }
};

/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.services.report.CreateReportRequest.prototype.getUserId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.services.report.CreateReportRequest} returns this
 */
proto.services.report.CreateReportRequest.prototype.setUserId = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional Report report = 2;
 * @return {?proto.services.report.Report}
 */
proto.services.report.CreateReportRequest.prototype.getReport = function () {
  return /** @type{?proto.services.report.Report} */ (
    jspb.Message.getWrapperField(this, proto.services.report.Report, 2)
  );
};

/**
 * @param {?proto.services.report.Report|undefined} value
 * @return {!proto.services.report.CreateReportRequest} returns this
 */
proto.services.report.CreateReportRequest.prototype.setReport = function (
  value
) {
  return jspb.Message.setWrapperField(this, 2, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.services.report.CreateReportRequest} returns this
 */
proto.services.report.CreateReportRequest.prototype.clearReport = function () {
  return this.setReport(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.report.CreateReportRequest.prototype.hasReport = function () {
  return jspb.Message.getField(this, 2) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.services.report.CreateReportResponse.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.services.report.CreateReportResponse.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.services.report.CreateReportResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.services.report.CreateReportResponse.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        created: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.report.CreateReportResponse}
 */
proto.services.report.CreateReportResponse.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.report.CreateReportResponse();
  return proto.services.report.CreateReportResponse.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.report.CreateReportResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.report.CreateReportResponse}
 */
proto.services.report.CreateReportResponse.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = /** @type {boolean} */ (reader.readBool());
          msg.setCreated(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.report.CreateReportResponse.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.services.report.CreateReportResponse.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.report.CreateReportResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.report.CreateReportResponse.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getCreated();
  if (f) {
    writer.writeBool(1, f);
  }
};

/**
 * optional bool created = 1;
 * @return {boolean}
 */
proto.services.report.CreateReportResponse.prototype.getCreated = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 1, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.services.report.CreateReportResponse} returns this
 */
proto.services.report.CreateReportResponse.prototype.setCreated = function (
  value
) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.services.report.ListAllReportsRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.services.report.ListAllReportsRequest.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.services.report.ListAllReportsRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.services.report.ListAllReportsRequest.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {};

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.report.ListAllReportsRequest}
 */
proto.services.report.ListAllReportsRequest.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.report.ListAllReportsRequest();
  return proto.services.report.ListAllReportsRequest.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.report.ListAllReportsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.report.ListAllReportsRequest}
 */
proto.services.report.ListAllReportsRequest.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.report.ListAllReportsRequest.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.services.report.ListAllReportsRequest.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.report.ListAllReportsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.report.ListAllReportsRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.report.ListAllReportsResponse.repeatedFields_ = [1];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.services.report.ListAllReportsResponse.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.services.report.ListAllReportsResponse.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.services.report.ListAllReportsResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.services.report.ListAllReportsResponse.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        reportsList: jspb.Message.toObjectList(
          msg.getReportsList(),
          proto.services.report.Report.toObject,
          includeInstance
        ),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.report.ListAllReportsResponse}
 */
proto.services.report.ListAllReportsResponse.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.report.ListAllReportsResponse();
  return proto.services.report.ListAllReportsResponse.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.report.ListAllReportsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.report.ListAllReportsResponse}
 */
proto.services.report.ListAllReportsResponse.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = new proto.services.report.Report();
          reader.readMessage(
            value,
            proto.services.report.Report.deserializeBinaryFromReader
          );
          msg.addReports(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.report.ListAllReportsResponse.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.services.report.ListAllReportsResponse.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.report.ListAllReportsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.report.ListAllReportsResponse.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined;
    f = message.getReportsList();
    if (f.length > 0) {
      writer.writeRepeatedMessage(
        1,
        f,
        proto.services.report.Report.serializeBinaryToWriter
      );
    }
  };

/**
 * repeated Report reports = 1;
 * @return {!Array<!proto.services.report.Report>}
 */
proto.services.report.ListAllReportsResponse.prototype.getReportsList =
  function () {
    return /** @type{!Array<!proto.services.report.Report>} */ (
      jspb.Message.getRepeatedWrapperField(
        this,
        proto.services.report.Report,
        1
      )
    );
  };

/**
 * @param {!Array<!proto.services.report.Report>} value
 * @return {!proto.services.report.ListAllReportsResponse} returns this
 */
proto.services.report.ListAllReportsResponse.prototype.setReportsList =
  function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 1, value);
  };

/**
 * @param {!proto.services.report.Report=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.report.Report}
 */
proto.services.report.ListAllReportsResponse.prototype.addReports = function (
  opt_value,
  opt_index
) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    1,
    opt_value,
    proto.services.report.Report,
    opt_index
  );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.report.ListAllReportsResponse} returns this
 */
proto.services.report.ListAllReportsResponse.prototype.clearReportsList =
  function () {
    return this.setReportsList([]);
  };

goog.object.extend(exports, proto.services.report);
